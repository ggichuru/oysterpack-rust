digraph ml {
    ndBuild[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nBuild|- timestamp: DateTime&lt;Utc&gt;\n- target: Target\n- ci_platform: Option&lt;ContinuousIntegrationPlatform&gt;\n- compilation: Compilation\n- git_version: Option&lt;GitVersion&gt;\n- package: Package|+ timestamp(&amp;self) -&gt; DateTime&lt;Utc&gt;\n+ target(&amp;self) -&gt; &amp;Target\n+ ci_platform(&amp;self) -&gt; Option&lt;&amp;ContinuousIntegrationPlatform&gt;\n+ compilation(&amp;self) -&gt; &amp;Compilation\n+ git_version(&amp;self) -&gt; Option&lt;&amp;GitVersion&gt;\n+ package(&amp;self) -&gt; &amp;Package}"][shape="record"];
    ndBuildBuilder[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nBuildBuilder|- timestamp: Option&lt;DateTime&lt;Utc&gt;&gt;\n- target: Option&lt;Target&gt;\n- ci_platform: Option&lt;ContinuousIntegrationPlatform&gt;\n- compilation: Option&lt;Compilation&gt;\n- git_version: Option&lt;GitVersion&gt;\n- package: Option&lt;Package&gt;|+ new() -&gt; BuildBuilder\n+ timestamp(&amp;mut self, timestamp: DateTime&lt;Utc&gt;)\n+ target(&amp;mut self, triple: TargetTriple, env: TargetEnv, os: TargetOperatingSystem, arch: TargetArchitecture, endian: Endian, pointer_width: PointerWidth)\n+ ci_platform(&amp;mut self, ci: ContinuousIntegrationPlatform)\n+ compilation(&amp;mut self, debug: bool, features: Vec&lt;String&gt;, opt_level: CompileOptLevel, rustc_version: RustcVersion, host: TargetTriple, profile: BuildProfile)\n+ git_version(&amp;mut self, ver: GitVersion)\n+ package(&amp;mut self, name: String, authors: Vec&lt;String&gt;, description: String, version: semver::Version, homepage: String, dependencies: Vec&lt;PackageId&gt;)\n+ build(self) -&gt; Build}"][shape="record"];
    ndTargetOperatingSystem[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nTargetOperatingSystem|- family: String\n- os: String|+ new(family: String, os: String) -&gt; TargetOperatingSystem\n+ family(&amp;self) -&gt; &amp;str\n+ os(&amp;self) -&gt; &amp;str}"][shape="record"];
    ndTarget[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nTarget|- triple: TargetTriple\n- env: TargetEnv\n- os: TargetOperatingSystem\n- arch: TargetArchitecture\n- endian: Endian\n- pointer_width: PointerWidth|+ triple(&amp;self) -&gt; &amp;TargetTriple\n+ env(&amp;self) -&gt; &amp;TargetEnv\n+ os(&amp;self) -&gt; &amp;TargetOperatingSystem\n+ arch(&amp;self) -&gt; &amp;TargetArchitecture\n+ endian(&amp;self) -&gt; &amp;Endian\n+ pointer_width(&amp;self) -&gt; &amp;PointerWidth}"][shape="record"];
    ndCompilation[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nCompilation|- debug: bool\n- features: Vec&lt;String&gt;\n- opt_level: CompileOptLevel\n- rustc_version: RustcVersion\n- host: TargetTriple\n- profile: BuildProfile|+ debug(&amp;self) -&gt; bool\n+ features(&amp;self) -&gt; &amp;Vec&lt;String&gt;\n+ opt_level(&amp;self) -&gt; &amp;CompileOptLevel\n+ rustc_version(&amp;self) -&gt; &amp;RustcVersion\n+ host_triple(&amp;self) -&gt; &amp;TargetTriple\n+ profile(&amp;self) -&gt; &amp;BuildProfile}"][shape="record"];
    ndPackage[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nPackage|- id: PackageId\n- authors: Vec&lt;String&gt;\n- description: String\n- homepage: String\n- dependencies: Vec&lt;PackageId&gt;|+ new(id: PackageId, authors: Vec&lt;String&gt;, description: String, homepage: String, dependencies: Vec&lt;PackageId&gt;) -&gt; Package\n+ id(&amp;self) -&gt; &amp;PackageId\n+ name(&amp;self) -&gt; &amp;str\n+ version(&amp;self) -&gt; &amp;semver::Version\n+ authors(&amp;self) -&gt; &amp;[String]\n+ description(&amp;self) -&gt; &amp;str\n+ homepage(&amp;self) -&gt; &amp;str\n+ dependencies(&amp;self) -&gt; &amp;[PackageId]}"][shape="record"];
    ndPackageId[label="{&lt;&lt;&lt;Structure&gt;&gt;&gt;\nPackageId|- name: String\n- version: semver::Version|+ new(name: String, version: semver::Version) -&gt; PackageId\n+ name(&amp;self) -&gt; &amp;str\n+ version(&amp;self) -&gt; &amp;semver::Version}"][shape="record"];
    ndKind[label="{&lt;&lt;&lt;Enumeration&gt;&gt;&gt;\nKind|Normal\nDevelopment\nBuild}"][shape="record"];
    ndBuild -> ndBuildBuilder[label=""][arrowhead="vee"];
    ndTargetOperatingSystem -> ndBuildBuilder[label=""][style="dashed"][arrowhead="vee"];
    ndTargetOperatingSystem -> ndTarget[label=""][arrowhead="diamond"];
    ndTarget -> ndBuild[label=""][arrowhead="diamond"];
    ndTarget -> ndBuildBuilder[label=""][arrowhead="diamond"];
    ndCompilation -> ndBuild[label=""][arrowhead="diamond"];
    ndCompilation -> ndBuildBuilder[label=""][arrowhead="diamond"];
    ndPackage -> ndBuild[label=""][arrowhead="diamond"];
    ndPackage -> ndBuildBuilder[label=""][arrowhead="diamond"];
    ndPackageId -> ndPackage[label=""][style="dashed"][arrowhead="diamond"];
}
